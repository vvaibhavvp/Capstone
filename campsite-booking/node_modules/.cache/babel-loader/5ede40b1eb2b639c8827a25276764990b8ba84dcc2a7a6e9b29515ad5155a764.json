{"ast":null,"code":"var _jsxFileName = \"/Users/priyankpadshala/Documents/GitHub/vaibhav/Capstone/campsite-booking/src/components/SignupPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"../styles.css\";\n// import axios from \"axios\";\n// import { toast } from \"react-hot-toast\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const SignupPage = () => {\n//     const navigate = useNavigate();\n\n//     const [formData, setFormData] = useState({\n//         username: \"\",\n//         email: \"\",\n//         password: \"\",\n//         confirmPassword: \"\",\n//     });\n\n//     const handleChange = (e) => {\n//         setFormData({ ...formData, [e.target.name]: e.target.value });\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault(); // Prevent default form submission\n\n//         if (formData.password !== formData.confirmPassword) {\n//             toast.error(\"Passwords do not match!\");\n//             return;\n//         }\n\n//         const userInfo = {\n//             username: formData.username,\n//             email: formData.email,\n//             password: formData.password,\n//         };\n\n//         try {\n//             const res = await axios.post(\"http://localhost:9000/user/signup\", userInfo);\n//             if (res.data) {\n//                 toast.success(\"Signup Successfully\");\n//                 navigate(\"/login\", { replace: true }); // Redirect to login page\n//                 localStorage.setItem(\"Users\", JSON.stringify(res.data.user));\n//             }\n//         } catch (err) {\n//             if (err.response) {\n//                 toast.error(\"Error: \" + err.response.data.message);\n//             }\n//         }\n//     };\n\n//     return (\n//         <div className=\"auth-page\">\n//             <div className=\"auth-container\">\n//                 <h2>Sign Up</h2>\n//                 <form onSubmit={handleSubmit}>\n//                     <input type=\"text\" name=\"username\" placeholder=\"Full Name\" value={formData.username} onChange={handleChange} required />\n//                     <input type=\"email\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleChange} required />\n//                     <input type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} required />\n//                     <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" value={formData.confirmPassword} onChange={handleChange} required />\n//                     <button type=\"submit\">Sign Up</button>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default SignupPage;\n\nimport React, { useState } from \"react\";\nimport \"../styles.css\";\nimport axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const validateUsername = username => {\n    const usernameRegex = /^[A-Za-z\\s]{3,}$/; // Only letters and spaces, minimum 3 characters\n    return usernameRegex.test(username);\n  };\n  const validatePassword = password => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\n    return passwordRegex.test(password);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateUsername(formData.username)) {\n      toast.error(\"Invalid name! Name must be at least 3 characters long and contain only letters.\");\n      return;\n    }\n    if (!validatePassword(formData.password)) {\n      toast.error(\"Password must be at least 6 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character.\");\n      return;\n    }\n    if (formData.password !== formData.confirmPassword) {\n      toast.error(\"Passwords do not match!\");\n      return;\n    }\n    const userInfo = {\n      username: formData.username,\n      email: formData.email,\n      password: formData.password\n    };\n    try {\n      const res = await axios.post(\"http://localhost:9000/user/signup\", userInfo);\n      if (res.data) {\n        toast.success(\"Signup Successfully\");\n        navigate(\"/login\", {\n          replace: true\n        });\n        localStorage.setItem(\"Users\", JSON.stringify(res.data.user));\n      }\n    } catch (err) {\n      if (err.response) {\n        toast.error(\"Error: \" + err.response.data.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Full Name\",\n          value: formData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          placeholder: \"Confirm Password\",\n          value: formData.confirmPassword,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n_s(SignupPage, \"CuVRonwIMaqOsTL970MiR+t6E5E=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","axios","toast","useNavigate","jsxDEV","_jsxDEV","SignupPage","_s","navigate","formData","setFormData","username","email","password","confirmPassword","handleChange","e","target","name","value","validateUsername","usernameRegex","test","validatePassword","passwordRegex","handleSubmit","preventDefault","error","userInfo","res","post","data","success","replace","localStorage","setItem","JSON","stringify","user","err","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/Users/priyankpadshala/Documents/GitHub/vaibhav/Capstone/campsite-booking/src/components/SignupPage.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import \"../styles.css\";\n// import axios from \"axios\";\n// import { toast } from \"react-hot-toast\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const SignupPage = () => {\n//     const navigate = useNavigate();\n\n//     const [formData, setFormData] = useState({\n//         username: \"\",\n//         email: \"\",\n//         password: \"\",\n//         confirmPassword: \"\",\n//     });\n\n//     const handleChange = (e) => {\n//         setFormData({ ...formData, [e.target.name]: e.target.value });\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault(); // Prevent default form submission\n\n//         if (formData.password !== formData.confirmPassword) {\n//             toast.error(\"Passwords do not match!\");\n//             return;\n//         }\n\n//         const userInfo = {\n//             username: formData.username,\n//             email: formData.email,\n//             password: formData.password,\n//         };\n\n//         try {\n//             const res = await axios.post(\"http://localhost:9000/user/signup\", userInfo);\n//             if (res.data) {\n//                 toast.success(\"Signup Successfully\");\n//                 navigate(\"/login\", { replace: true }); // Redirect to login page\n//                 localStorage.setItem(\"Users\", JSON.stringify(res.data.user));\n//             }\n//         } catch (err) {\n//             if (err.response) {\n//                 toast.error(\"Error: \" + err.response.data.message);\n//             }\n//         }\n//     };\n\n//     return (\n//         <div className=\"auth-page\">\n//             <div className=\"auth-container\">\n//                 <h2>Sign Up</h2>\n//                 <form onSubmit={handleSubmit}>\n//                     <input type=\"text\" name=\"username\" placeholder=\"Full Name\" value={formData.username} onChange={handleChange} required />\n//                     <input type=\"email\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleChange} required />\n//                     <input type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} required />\n//                     <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" value={formData.confirmPassword} onChange={handleChange} required />\n//                     <button type=\"submit\">Sign Up</button>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default SignupPage;\n\n\nimport React, { useState } from \"react\";\nimport \"../styles.css\";\nimport axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SignupPage = () => {\n    const navigate = useNavigate();\n\n    const [formData, setFormData] = useState({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const validateUsername = (username) => {\n        const usernameRegex = /^[A-Za-z\\s]{3,}$/; // Only letters and spaces, minimum 3 characters\n        return usernameRegex.test(username);\n    };\n\n    const validatePassword = (password) => {\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\n        return passwordRegex.test(password);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!validateUsername(formData.username)) {\n            toast.error(\"Invalid name! Name must be at least 3 characters long and contain only letters.\");\n            return;\n        }\n\n        if (!validatePassword(formData.password)) {\n            toast.error(\n                \"Password must be at least 6 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character.\"\n            );\n            return;\n        }\n\n        if (formData.password !== formData.confirmPassword) {\n            toast.error(\"Passwords do not match!\");\n            return;\n        }\n\n        const userInfo = {\n            username: formData.username,\n            email: formData.email,\n            password: formData.password,\n        };\n\n        try {\n            const res = await axios.post(\"http://localhost:9000/user/signup\", userInfo);\n            if (res.data) {\n                toast.success(\"Signup Successfully\");\n                navigate(\"/login\", { replace: true });\n                localStorage.setItem(\"Users\", JSON.stringify(res.data.user));\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(\"Error: \" + err.response.data.message);\n            }\n        }\n    };\n\n    return (\n        <div className=\"auth-page\">\n            <div className=\"auth-container\">\n                <h2>Sign Up</h2>\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" name=\"username\" placeholder=\"Full Name\" value={formData.username} onChange={handleChange} required />\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleChange} required />\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} required />\n                    <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" value={formData.confirmPassword} onChange={handleChange} required />\n                    <button type=\"submit\">Sign Up</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default SignupPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}