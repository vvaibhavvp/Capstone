{"ast":null,"code":"var _jsxFileName = \"/Users/priyankpadshala/Downloads/Capstone-main/campsite-booking/src/components/ResetPasswordPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPasswordPage = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match!\");\n      return;\n    }\n    const userInfo = {\n      token,\n      password,\n      confirmPassword\n    };\n    try {\n      const res = await axios.post(\"http://localhost:9000/user/reset-password\", userInfo);\n      toast.success(res.data.message);\n      navigate(\"/login\"); // Redirect to login page after successful reset\n    } catch (err) {\n      if (err.response) {\n        toast.error(err.response.data.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter new password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          placeholder: \"Confirm new password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPasswordPage, \"Q8vZNall3Te/LBI9aUdqVsjJxHE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPasswordPage;\nexport default ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","axios","toast","useParams","useNavigate","jsxDEV","_jsxDEV","ResetPasswordPage","_s","token","navigate","password","setPassword","confirmPassword","setConfirmPassword","handleSubmit","e","preventDefault","error","userInfo","res","post","success","data","message","err","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/priyankpadshala/Downloads/Capstone-main/campsite-booking/src/components/ResetPasswordPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst ResetPasswordPage = () => {\n    const { token } = useParams();\n    const navigate = useNavigate();\n\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (password !== confirmPassword) {\n            toast.error(\"Passwords do not match!\");\n            return;\n        }\n\n        const userInfo = { token, password, confirmPassword };\n\n        try {\n            const res = await axios.post(\"http://localhost:9000/user/reset-password\", userInfo);\n            toast.success(res.data.message);\n            navigate(\"/login\");  // Redirect to login page after successful reset\n        } catch (err) {\n            if (err.response) {\n                toast.error(err.response.data.message);\n            }\n        }\n    };\n\n    return (\n        <div className=\"auth-page\">\n            <div className=\"auth-container\">\n                <h2>Reset Password</h2>\n                <form onSubmit={handleSubmit}>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter new password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                    <input\n                        type=\"password\"\n                        name=\"confirmPassword\"\n                        placeholder=\"Confirm new password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        required\n                    />\n                    <button type=\"submit\">Reset Password</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default ResetPasswordPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}