{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\Downloads\\\\Capstone_Group4 (2)\\\\Capstone_Group4\\\\campsite-booking\\\\src\\\\components\\\\Subscriptions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Subscriptions.css\";\n\n// Helper function to check if subscription is active\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isSubscriptionActive(subscription) {\n  if (!subscription) return false;\n  const now = new Date();\n  const endDate = new Date(subscription.end_date);\n  return subscription.subscription_status === \"Active\" && endDate > now;\n}\nconst Subscriptions = () => {\n  _s();\n  const [plans] = useState([{\n    id: 1,\n    name: \"Gold\",\n    price: 49.99,\n    discount_rate: 10,\n    description: \"Access to premium features, priority support, early access to campsite bookings, and complimentary camping gear.\"\n  }, {\n    id: 2,\n    name: \"Silver\",\n    price: 29.99,\n    discount_rate: 5,\n    description: \"Perfect for regular users with essential features, seasonal promotions, and community access at an affordable price.\"\n  }, {\n    id: 3,\n    name: \"Platinum\",\n    price: 79.99,\n    discount_rate: 15,\n    description: \"Ultimate subscription with VIP perks, exclusive access, early feature releases, and personalized customer support.\"\n  }]);\n  const [subscription, setSubscription] = useState(null);\n  const [expandedPlanId, setExpandedPlanId] = useState(null);\n  const [showPaymentForm, setShowPaymentForm] = useState(false);\n  const [selectedPlan, setSelectedPlan] = useState(null);\n  const [selectedDuration, setSelectedDuration] = useState(null);\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n  const [creditCardDetails, setCreditCardDetails] = useState({\n    nameOnCard: \"\",\n    cardNumber: \"\",\n    expirationDate: \"\",\n    cvv: \"\"\n  });\n  const [debitCardDetails, setDebitCardDetails] = useState({\n    nameOnCard: \"\",\n    cardNumber: \"\",\n    expirationDate: \"\",\n    cvv: \"\"\n  });\n  const [paymentError, setPaymentError] = useState(\"\");\n  const userData = JSON.parse(localStorage.getItem(\"Users\"));\n  const userId = userData ? userData._id : null;\n  const durations = [{\n    label: \"1 Month\",\n    months: 1\n  }, {\n    label: \"3 Months\",\n    months: 3\n  }, {\n    label: \"6 Months\",\n    months: 6\n  }, {\n    label: \"1 Year\",\n    months: 12\n  }];\n  useEffect(() => {\n    if (userId) {\n      axios.get(`http://localhost:9000/user/subscriptions/status?userId=${userId}`).then(response => {\n        setSubscription(response.data);\n      }).catch(error => {\n        console.error(\"Error fetching subscription:\", error);\n        setSubscription(null);\n      });\n    }\n  }, [userId]);\n  const subscriptionIsActive = isSubscriptionActive(subscription);\n  const endDateStr = subscription !== null && subscription !== void 0 && subscription.end_date ? new Date(subscription.end_date).toLocaleDateString() : \"\";\n\n  // VALIDATION LOGIC â€” copied exactly from your PaymentPage.js\n  const validateCardDetails = details => {\n    const {\n      cardNumber,\n      expirationDate,\n      cvv\n    } = details;\n    const cardNumberRegex = /^\\d{16}$/;\n    const expirationDateRegex = /^(0[1-9]|1[0-2])\\/\\d{2}$/;\n    const cvvRegex = /^\\d{3}$/;\n    if (!cardNumberRegex.test(cardNumber)) {\n      alert(\"Please enter a valid 16-digit card number.\");\n      return false;\n    }\n    if (!expirationDateRegex.test(expirationDate)) {\n      alert(\"Please enter a valid expiration date in MM/YY format.\");\n      return false;\n    }\n    const [month, year] = expirationDate.split(\"/\").map(Number);\n    const currentDate = new Date();\n    const currentMonth = currentDate.getMonth() + 1;\n    const currentYear = currentDate.getFullYear() % 100;\n    if (year < currentYear || year === currentYear && month < currentMonth) {\n      alert(\"The expiration date has already passed.\");\n      return false;\n    }\n    if (!cvvRegex.test(cvv)) {\n      alert(\"Please enter a valid 3-digit CVV.\");\n      return false;\n    }\n    return true;\n  };\n  const handleDurationClick = (plan, duration) => {\n    if (subscriptionIsActive) {\n      alert(`You already have an active subscription (${subscription.subscription_plan}) until ${endDateStr}.`);\n      return;\n    }\n    setSelectedPlan(plan);\n    setSelectedDuration(duration);\n    setShowPaymentForm(true);\n  };\n  const handlePaymentSubmit = async e => {\n    e.preventDefault();\n    if (subscriptionIsActive) {\n      setPaymentError(\"You already have an active subscription.\");\n      return;\n    }\n\n    // Validate based on selected payment method\n    if (paymentMethod === \"Credit Card\") {\n      if (!validateCardDetails(creditCardDetails)) {\n        return;\n      }\n    }\n    if (paymentMethod === \"Debit Card\") {\n      if (!validateCardDetails(debitCardDetails)) {\n        return;\n      }\n    }\n    const start_date = new Date().toISOString();\n    const end_date = new Date(new Date().setMonth(new Date().getMonth() + selectedDuration.months)).toISOString();\n    const payment_amount = parseFloat((selectedPlan.price * selectedDuration.months).toFixed(2));\n    const paymentData = {\n      user_id: userId,\n      subscription_plan: selectedPlan.name,\n      discount_rate: selectedPlan.discount_rate,\n      start_date,\n      end_date,\n      subscription_status: \"Active\",\n      payment_status: \"Completed\",\n      payment_amount,\n      payment_method: paymentMethod,\n      payment_details: paymentMethod === \"Credit Card\" ? creditCardDetails : debitCardDetails\n    };\n    try {\n      await axios.post(\"http://localhost:9000/user/subscriptions\", paymentData);\n      alert(`Payment Successful! Subscribed to ${selectedPlan.name} Plan.`);\n      setSubscription(paymentData);\n      resetPaymentForm();\n    } catch (error) {\n      console.error(\"Payment failed:\", error);\n      setPaymentError(\"Payment failed. Please try again.\");\n    }\n  };\n  const resetPaymentForm = () => {\n    setShowPaymentForm(false);\n    setExpandedPlanId(null);\n    setSelectedPlan(null);\n    setSelectedDuration(null);\n    setPaymentMethod(\"\");\n    setCreditCardDetails({\n      cardNumber: \"\",\n      expirationDate: \"\",\n      cvv: \"\"\n    });\n    setDebitCardDetails({\n      cardNumber: \"\",\n      expirationDate: \"\",\n      cvv: \"\"\n    });\n    setPaymentError(\"\");\n  };\n  const headerText = subscriptionIsActive ? `Your current subscription: ${subscription.subscription_plan} (Expires: ${endDateStr})` : \"Enroll for Subscription\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: headerText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), subscriptionIsActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subscription-banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You have the \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: subscription.subscription_plan\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 26\n        }, this), \" plan active until \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: endDateStr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 26\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You can't subscribe to another plan until this expires.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subscription-list\",\n      children: plans.map(plan => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subscription-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [plan.name, \" Plan\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: plan.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), expandedPlanId === plan.id && !subscriptionIsActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subscription-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"duration-options\",\n            children: durations.map(duration => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: duration.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 25\n                }, this), \": $\", (plan.price * duration.months).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDurationClick(plan, duration),\n                children: [\"Subscribe for \", duration.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 23\n              }, this)]\n            }, duration.months, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setExpandedPlanId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: subscriptionIsActive,\n          onClick: () => !subscriptionIsActive && setExpandedPlanId(plan.id),\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this)]\n      }, plan.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), showPaymentForm && !subscriptionIsActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Payment Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), paymentError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: paymentError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-methods\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `payment-method-card ${paymentMethod === \"Credit Card\" ? \"selected\" : \"\"}`,\n          onClick: () => setPaymentMethod(\"Credit Card\"),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Credit Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `payment-method-card ${paymentMethod === \"Debit Card\" ? \"selected\" : \"\"}`,\n          onClick: () => setPaymentMethod(\"Debit Card\"),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Debit Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `payment-method-card ${paymentMethod === \"PayPal\" ? \"selected\" : \"\"}`,\n          onClick: () => setPaymentMethod(\"PayPal\"),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"PayPal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePaymentSubmit,\n        className: \"payment-form\",\n        children: [(paymentMethod === \"Credit Card\" || paymentMethod === \"Debit Card\") && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name on Card\",\n            value: paymentMethod === \"Credit Card\" ? creditCardDetails.nameOnCard : debitCardDetails.nameOnCard,\n            onChange: e => paymentMethod === \"Credit Card\" ? setCreditCardDetails({\n              ...creditCardDetails,\n              nameOnCard: e.target.value\n            }) : setDebitCardDetails({\n              ...debitCardDetails,\n              nameOnCard: e.target.value\n            }),\n            className: \"input-field\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Card Number\",\n            value: paymentMethod === \"Credit Card\" ? creditCardDetails.cardNumber : debitCardDetails.cardNumber,\n            onChange: e => paymentMethod === \"Credit Card\" ? setCreditCardDetails({\n              ...creditCardDetails,\n              cardNumber: e.target.value\n            }) : setDebitCardDetails({\n              ...debitCardDetails,\n              cardNumber: e.target.value\n            }),\n            className: \"input-field\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"credit-card-fields\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Expiration Date (MM/YY)\",\n              value: paymentMethod === \"Credit Card\" ? creditCardDetails.expirationDate : debitCardDetails.expirationDate,\n              onChange: e => paymentMethod === \"Credit Card\" ? setCreditCardDetails({\n                ...creditCardDetails,\n                expirationDate: e.target.value\n              }) : setDebitCardDetails({\n                ...debitCardDetails,\n                expirationDate: e.target.value\n              }),\n              className: \"input-field\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"CVV\",\n              value: paymentMethod === \"Credit Card\" ? creditCardDetails.cvv : debitCardDetails.cvv,\n              onChange: e => paymentMethod === \"Credit Card\" ? setCreditCardDetails({\n                ...creditCardDetails,\n                cvv: e.target.value\n              }) : setDebitCardDetails({\n                ...debitCardDetails,\n                cvv: e.target.value\n              }),\n              className: \"input-field\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }, this), paymentMethod === \"PayPal\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paypal-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please log into your PayPal account to complete the payment.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Confirm Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: resetPaymentForm,\n          className: \"submit-btn\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(Subscriptions, \"/UBdnVSoFpRSfUqqA7l8Io0WccE=\");\n_c = Subscriptions;\nexport default Subscriptions;\nvar _c;\n$RefreshReg$(_c, \"Subscriptions\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","isSubscriptionActive","subscription","now","Date","endDate","end_date","subscription_status","Subscriptions","_s","plans","id","name","price","discount_rate","description","setSubscription","expandedPlanId","setExpandedPlanId","showPaymentForm","setShowPaymentForm","selectedPlan","setSelectedPlan","selectedDuration","setSelectedDuration","paymentMethod","setPaymentMethod","creditCardDetails","setCreditCardDetails","nameOnCard","cardNumber","expirationDate","cvv","debitCardDetails","setDebitCardDetails","paymentError","setPaymentError","userData","JSON","parse","localStorage","getItem","userId","_id","durations","label","months","get","then","response","data","catch","error","console","subscriptionIsActive","endDateStr","toLocaleDateString","validateCardDetails","details","cardNumberRegex","expirationDateRegex","cvvRegex","test","alert","month","year","split","map","Number","currentDate","currentMonth","getMonth","currentYear","getFullYear","handleDurationClick","plan","duration","subscription_plan","handlePaymentSubmit","e","preventDefault","start_date","toISOString","setMonth","payment_amount","parseFloat","toFixed","paymentData","user_id","payment_status","payment_method","payment_details","post","resetPaymentForm","headerText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","color","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/Downloads/Capstone_Group4 (2)/Capstone_Group4/campsite-booking/src/components/Subscriptions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Subscriptions.css\";\n\n// Helper function to check if subscription is active\nfunction isSubscriptionActive(subscription) {\n  if (!subscription) return false;\n  const now = new Date();\n  const endDate = new Date(subscription.end_date);\n  return subscription.subscription_status === \"Active\" && endDate > now;\n}\n\nconst Subscriptions = () => {\n  const [plans] = useState([\n    {\n      id: 1,\n      name: \"Gold\",\n      price: 49.99,\n      discount_rate: 10,\n      description:\n        \"Access to premium features, priority support, early access to campsite bookings, and complimentary camping gear.\",\n    },\n    {\n      id: 2,\n      name: \"Silver\",\n      price: 29.99,\n      discount_rate: 5,\n      description:\n        \"Perfect for regular users with essential features, seasonal promotions, and community access at an affordable price.\",\n    },\n    {\n      id: 3,\n      name: \"Platinum\",\n      price: 79.99,\n      discount_rate: 15,\n      description:\n        \"Ultimate subscription with VIP perks, exclusive access, early feature releases, and personalized customer support.\",\n    },\n  ]);\n\n  const [subscription, setSubscription] = useState(null);\n  const [expandedPlanId, setExpandedPlanId] = useState(null);\n  const [showPaymentForm, setShowPaymentForm] = useState(false);\n  const [selectedPlan, setSelectedPlan] = useState(null);\n  const [selectedDuration, setSelectedDuration] = useState(null);\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n  const [creditCardDetails, setCreditCardDetails] = useState({\n    nameOnCard: \"\",\n    cardNumber: \"\",\n    expirationDate: \"\",\n    cvv: \"\",\n  });\n  const [debitCardDetails, setDebitCardDetails] = useState({\n    nameOnCard: \"\",\n    cardNumber: \"\",\n    expirationDate: \"\",\n    cvv: \"\",\n  });\n  const [paymentError, setPaymentError] = useState(\"\");\n\n  const userData = JSON.parse(localStorage.getItem(\"Users\"));\n  const userId = userData ? userData._id : null;\n\n  const durations = [\n    { label: \"1 Month\", months: 1 },\n    { label: \"3 Months\", months: 3 },\n    { label: \"6 Months\", months: 6 },\n    { label: \"1 Year\", months: 12 },\n  ];\n\n  useEffect(() => {\n    if (userId) {\n      axios\n        .get(`http://localhost:9000/user/subscriptions/status?userId=${userId}`)\n        .then((response) => {\n          setSubscription(response.data);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching subscription:\", error);\n          setSubscription(null);\n        });\n    }\n  }, [userId]);\n\n  const subscriptionIsActive = isSubscriptionActive(subscription);\n  const endDateStr = subscription?.end_date\n    ? new Date(subscription.end_date).toLocaleDateString()\n    : \"\";\n\n  // VALIDATION LOGIC â€” copied exactly from your PaymentPage.js\n  const validateCardDetails = (details) => {\n    const { cardNumber, expirationDate, cvv } = details;\n\n    const cardNumberRegex = /^\\d{16}$/;\n    const expirationDateRegex = /^(0[1-9]|1[0-2])\\/\\d{2}$/;\n    const cvvRegex = /^\\d{3}$/;\n\n    if (!cardNumberRegex.test(cardNumber)) {\n      alert(\"Please enter a valid 16-digit card number.\");\n      return false;\n    }\n\n    if (!expirationDateRegex.test(expirationDate)) {\n      alert(\"Please enter a valid expiration date in MM/YY format.\");\n      return false;\n    }\n\n    const [month, year] = expirationDate.split(\"/\").map(Number);\n    const currentDate = new Date();\n    const currentMonth = currentDate.getMonth() + 1;\n    const currentYear = currentDate.getFullYear() % 100;\n\n    if (year < currentYear || (year === currentYear && month < currentMonth)) {\n      alert(\"The expiration date has already passed.\");\n      return false;\n    }\n\n    if (!cvvRegex.test(cvv)) {\n      alert(\"Please enter a valid 3-digit CVV.\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleDurationClick = (plan, duration) => {\n    if (subscriptionIsActive) {\n      alert(\n        `You already have an active subscription (${subscription.subscription_plan}) until ${endDateStr}.`\n      );\n      return;\n    }\n    setSelectedPlan(plan);\n    setSelectedDuration(duration);\n    setShowPaymentForm(true);\n  };\n\n  const handlePaymentSubmit = async (e) => {\n    e.preventDefault();\n    if (subscriptionIsActive) {\n      setPaymentError(\"You already have an active subscription.\");\n      return;\n    }\n\n    // Validate based on selected payment method\n    if (paymentMethod === \"Credit Card\") {\n      if (!validateCardDetails(creditCardDetails)) {\n        return;\n      }\n    }\n    if (paymentMethod === \"Debit Card\") {\n      if (!validateCardDetails(debitCardDetails)) {\n        return;\n      }\n    }\n\n    const start_date = new Date().toISOString();\n    const end_date = new Date(\n      new Date().setMonth(new Date().getMonth() + selectedDuration.months)\n    ).toISOString();\n    const payment_amount = parseFloat(\n      (selectedPlan.price * selectedDuration.months).toFixed(2)\n    );\n\n    const paymentData = {\n      user_id: userId,\n      subscription_plan: selectedPlan.name,\n      discount_rate: selectedPlan.discount_rate,\n      start_date,\n      end_date,\n      subscription_status: \"Active\",\n      payment_status: \"Completed\",\n      payment_amount,\n      payment_method: paymentMethod,\n      payment_details:\n        paymentMethod === \"Credit Card\" ? creditCardDetails : debitCardDetails,\n    };\n\n    try {\n      await axios.post(\"http://localhost:9000/user/subscriptions\", paymentData);\n      alert(`Payment Successful! Subscribed to ${selectedPlan.name} Plan.`);\n      setSubscription(paymentData);\n      resetPaymentForm();\n    } catch (error) {\n      console.error(\"Payment failed:\", error);\n      setPaymentError(\"Payment failed. Please try again.\");\n    }\n  };\n\n  const resetPaymentForm = () => {\n    setShowPaymentForm(false);\n    setExpandedPlanId(null);\n    setSelectedPlan(null);\n    setSelectedDuration(null);\n    setPaymentMethod(\"\");\n    setCreditCardDetails({ cardNumber: \"\", expirationDate: \"\", cvv: \"\" });\n    setDebitCardDetails({ cardNumber: \"\", expirationDate: \"\", cvv: \"\" });\n    setPaymentError(\"\");\n  };\n\n  const headerText = subscriptionIsActive\n    ? `Your current subscription: ${subscription.subscription_plan} (Expires: ${endDateStr})`\n    : \"Enroll for Subscription\";\n\n  return (\n    <div className=\"container\">\n      <h2>{headerText}</h2>\n\n      {subscriptionIsActive && (\n        <div className=\"subscription-banner\">\n          <p>\n            You have the <strong>{subscription.subscription_plan}</strong> plan\n            active until <strong>{endDateStr}</strong>.\n          </p>\n          <p>You can't subscribe to another plan until this expires.</p>\n        </div>\n      )}\n\n      <div className=\"subscription-list\">\n        {plans.map((plan) => (\n          <div key={plan.id} className=\"subscription-card\">\n            <h3>{plan.name} Plan</h3>\n            <p>{plan.description}</p>\n\n            {expandedPlanId === plan.id && !subscriptionIsActive ? (\n              <div className=\"subscription-details\">\n                <ul className=\"duration-options\">\n                  {durations.map((duration) => (\n                    <li key={duration.months}>\n                      <p>\n                        <strong>{duration.label}</strong>: $\n                        {(plan.price * duration.months).toFixed(2)}\n                      </p>\n                      <button\n                        onClick={() => handleDurationClick(plan, duration)}\n                      >\n                        Subscribe for {duration.label}\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n                <button onClick={() => setExpandedPlanId(null)}>Cancel</button>\n              </div>\n            ) : (\n              <button\n                disabled={subscriptionIsActive}\n                onClick={() =>\n                  !subscriptionIsActive && setExpandedPlanId(plan.id)\n                }\n              >\n                Subscribe\n              </button>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {showPaymentForm && !subscriptionIsActive && (\n        <div className=\"payment-form-container\">\n          <h3>Payment Details</h3>\n          {paymentError && <p style={{ color: \"red\" }}>{paymentError}</p>}\n\n          <div className=\"payment-methods\">\n            <div\n              className={`payment-method-card ${\n                paymentMethod === \"Credit Card\" ? \"selected\" : \"\"\n              }`}\n              onClick={() => setPaymentMethod(\"Credit Card\")}\n            >\n              <span>Credit Card</span>\n            </div>\n            <div\n              className={`payment-method-card ${\n                paymentMethod === \"Debit Card\" ? \"selected\" : \"\"\n              }`}\n              onClick={() => setPaymentMethod(\"Debit Card\")}\n            >\n              <span>Debit Card</span>\n            </div>\n            <div\n              className={`payment-method-card ${\n                paymentMethod === \"PayPal\" ? \"selected\" : \"\"\n              }`}\n              onClick={() => setPaymentMethod(\"PayPal\")}\n            >\n              <span>PayPal</span>\n            </div>\n          </div>\n\n          <form onSubmit={handlePaymentSubmit} className=\"payment-form\">\n            {(paymentMethod === \"Credit Card\" ||\n              paymentMethod === \"Debit Card\") && (\n              <div className=\"card-details\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Name on Card\"\n                  value={\n                    paymentMethod === \"Credit Card\"\n                      ? creditCardDetails.nameOnCard\n                      : debitCardDetails.nameOnCard\n                  }\n                  onChange={(e) =>\n                    paymentMethod === \"Credit Card\"\n                      ? setCreditCardDetails({\n                          ...creditCardDetails,\n                          nameOnCard: e.target.value,\n                        })\n                      : setDebitCardDetails({\n                          ...debitCardDetails,\n                          nameOnCard: e.target.value,\n                        })\n                  }\n                  className=\"input-field\"\n                  required\n                />\n\n                <input\n                  type=\"text\"\n                  placeholder=\"Card Number\"\n                  value={\n                    paymentMethod === \"Credit Card\"\n                      ? creditCardDetails.cardNumber\n                      : debitCardDetails.cardNumber\n                  }\n                  onChange={(e) =>\n                    paymentMethod === \"Credit Card\"\n                      ? setCreditCardDetails({\n                          ...creditCardDetails,\n                          cardNumber: e.target.value,\n                        })\n                      : setDebitCardDetails({\n                          ...debitCardDetails,\n                          cardNumber: e.target.value,\n                        })\n                  }\n                  className=\"input-field\"\n                  required\n                />\n                <div className=\"credit-card-fields\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Expiration Date (MM/YY)\"\n                    value={\n                      paymentMethod === \"Credit Card\"\n                        ? creditCardDetails.expirationDate\n                        : debitCardDetails.expirationDate\n                    }\n                    onChange={(e) =>\n                      paymentMethod === \"Credit Card\"\n                        ? setCreditCardDetails({\n                            ...creditCardDetails,\n                            expirationDate: e.target.value,\n                          })\n                        : setDebitCardDetails({\n                            ...debitCardDetails,\n                            expirationDate: e.target.value,\n                          })\n                    }\n                    className=\"input-field\"\n                    required\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"CVV\"\n                    value={\n                      paymentMethod === \"Credit Card\"\n                        ? creditCardDetails.cvv\n                        : debitCardDetails.cvv\n                    }\n                    onChange={(e) =>\n                      paymentMethod === \"Credit Card\"\n                        ? setCreditCardDetails({\n                            ...creditCardDetails,\n                            cvv: e.target.value,\n                          })\n                        : setDebitCardDetails({\n                            ...debitCardDetails,\n                            cvv: e.target.value,\n                          })\n                    }\n                    className=\"input-field\"\n                    required\n                  />\n                </div>\n              </div>\n            )}\n\n            {paymentMethod === \"PayPal\" && (\n              <div className=\"paypal-message\">\n                <p>\n                  Please log into your PayPal account to complete the payment.\n                </p>\n              </div>\n            )}\n\n            <button type=\"submit\" className=\"submit-btn\">\n              Confirm Payment\n            </button>\n            <br></br>\n            <br></br>\n            <button\n              type=\"button\"\n              onClick={resetPaymentForm}\n              className=\"submit-btn\"\n            >\n              Cancel\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Subscriptions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}